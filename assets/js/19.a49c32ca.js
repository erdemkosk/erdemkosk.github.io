(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{465:function(t,e,a){"use strict";a.r(e);var s=a(4),o=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"what-is-stash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-stash"}},[t._v("#")]),t._v(" What is stash ?")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("We all deal with different jobs during the day. Sometimes when you are in the middle of a job, it is necessary to start another job. Are we going to say goodbye to our codes that we started doing in such cases but we have not finished yet?")]),t._v(" "),a("p",[t._v("In this case, the stash structure is coming to our rescue.\nIt maintains a list-like structure within the stash structure. we can discard our code changes we want to save here and save them for later use. Isn't it great?")]),t._v(" "),a("h3",{attrs:{id:"from-the-git-manual-run-git-stash-help-to-see-it-on-your-own"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#from-the-git-manual-run-git-stash-help-to-see-it-on-your-own"}},[t._v("#")]),t._v(" "),a("strong",[t._v("From the Git Manual (run git stash --help to see it on your own):")])]),t._v(" "),a("hr"),t._v(" "),a("blockquote",[a("p",[a("em",[t._v("Use git stash when you want to record the current state of the working directory and the index, but want to go back to a clean working directory. The command saves your local modifications away and reverts the working directory to match the HEAD commit.")])])]),t._v(" "),a("p",[a("strong",[t._v("You ensure that any changes that you have been working with git stash but have not yet committed are temporarily recorded by Git and that your active branch is brought to a clean state where there are no changes.")])]),t._v(" "),a("h3",{attrs:{id:"keywords"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#keywords"}},[t._v("#")]),t._v(" Keywords")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("So how can we use it?")]),t._v(" "),a("p",[t._v("Let's think we have a bucket. We throw the changes we make into the bucket. What if we want to look at what's in the bucket?")]),t._v(" "),a("p",[a("code",[t._v("git stash list")])]),t._v(" "),a("p",[t._v("So how can we throw our changes to stash?")]),t._v(" "),a("p",[a("code",[t._v('stash save "lets add changes"')])]),t._v(" "),a("h3",{attrs:{id:"pop-or-apply"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pop-or-apply"}},[t._v("#")]),t._v(" Pop or Apply ?")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("You have two options when you want to restore a change in Stash. Let's examine it?")]),t._v(" "),a("h4",{attrs:{id:"git-stash-pop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-stash-pop"}},[t._v("#")]),t._v(" git stash pop")]),t._v(" "),a("hr"),t._v(" "),a("p",[a("code",[t._v("git stash pop")])]),t._v(" "),a("p",[t._v("Stash restores the top of all changes and "),a("strong",[t._v("deletes")]),t._v(" those changes from the stash list.")]),t._v(" "),a("h4",{attrs:{id:"git-stash-apply"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-stash-apply"}},[t._v("#")]),t._v(" git stash apply")]),t._v(" "),a("hr"),t._v(" "),a("p",[a("code",[t._v("git stash apply")])]),t._v(" "),a("p",[t._v("Stash restores the top of all changes and "),a("strong",[t._v("does not delete")]),t._v(" these changes from the stash list.")]),t._v(" "),a("hr"),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("For now, our article ends here. However, we can continue in more detail later. ðŸ˜Ž")])])]),t._v(" "),a("hr")])}),[],!1,null,null,null);e.default=o.exports}}]);